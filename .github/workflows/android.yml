name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  unit_test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Test with Gradle
      run: ./gradlew test

    - name: Build with Gradle
      run: ./gradlew build --parallel

  #https://github.com/actions/runner-images/issues/6152#issuecomment-1243718140
  intent_test:
    runs-on: macos-12
    timeout-minutes: 30
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g
      GITHUB_WORKSPACE: ${{ github.workspace }}
      GITHUB_RUN_NUMBER: ${{ github.run_number }}
      HOMEBREW_NO_INSTALL_CLEANUP: 1
    steps:
     - name: Checkout
       uses: actions/checkout@v3

     - name: Gradle cache
       uses: gradle/gradle-build-action@v2

     - name: Install Haxm
       run: brew install --cask intel-haxm

     - name: Setup AVD cache
       uses: actions/cache@v3
       id: avd-cache
       with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd

     - name: Cache AVD
       if: steps.avd-cache.outputs.cache-hit != 'true'
       run: |
          # Install AVD files
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-27;default;x86_64'
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --licenses

          # Create emulator
          $ANDROID_HOME/tools/bin/avdmanager create avd -n Pixel_API_29_AOSP -d pixel --package 'system-images;android-27;default;x86_64'
          $ANDROID_HOME/emulator/emulator -list-avds
          if false; then
          emulator_config=~/.android/avd/Pixel_API_29_AOSP.avd/config.ini
          # The following madness is to support empty OR populated config.ini files,
          # the state of which is dependant on the version of the emulator used (which we don't control),
          # so let's be defensive to be safe.
          # Replace existing config (NOTE we're on MacOS so sed works differently!)
          sed -i .bak 's/hw.lcd.density=.*/hw.lcd.density=420/' "$emulator_config"
          sed -i .bak 's/hw.lcd.height=.*/hw.lcd.height=1920/' "$emulator_config"
          sed -i .bak 's/hw.lcd.width=.*/hw.lcd.width=1080/' "$emulator_config"
          # Or, add new config
          if ! grep -q "hw.lcd.density" "$emulator_config"; then
            echo "hw.lcd.density=420" >> "$emulator_config"
          fi
          if ! grep -q "hw.lcd.height" "$emulator_config"; then
            echo "hw.lcd.height=1920" >> "$emulator_config"
          fi
          if ! grep -q "hw.lcd.width" "$emulator_config"; then
            echo "hw.lcd.width=1080" >> "$emulator_config"
          fi
          echo "Emulator settings ($emulator_config)"
          cat "$emulator_config"
          fi

     - name: Run Tests
       run: |
          echo "Starting emulator and waiting for boot to complete...."
          ls -la $ANDROID_HOME/emulator
          nohup $ANDROID_HOME/tools/emulator -avd Pixel_API_29_AOSP -gpu host -no-audio -no-boot-anim -camera-back none -camera-front none -qemu -m 2048 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do echo "wait..."; sleep 1; done; input keyevent 82'
          echo "Emulator has finished booting"
          $ANDROID_HOME/platform-tools/adb devices
          ./gradlew connectedCheck
